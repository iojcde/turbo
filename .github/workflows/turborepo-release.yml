# Turborepo Release Pipeline
#
# This release consists of a few steps
#
# 1. Create a staging branch
# 2. Run some smoke tests on that branch
# 3. Compile the Go binary for macOS and for Windows/Linux
# 4. Build the Rust binary
# 5. Publish JS packages npm (including turbo itself)
# 6. Create a release branch and open a PR.

# You can opt into a dry run, which will skip publishing to npm and opening the release branch

name: Turborepo Release

on:
  workflow_dispatch:
    inputs:
      increment:
        description: "SemVer Increment (prerelease = bump canary)"
        required: true
        default: "prerelease"
        type: choice
        options:
          - prerelease
          - prepatch
          - preminor
          - premajor
          - patch
          - minor
          - major
      dry_run:
        description: "Do a dry run, skipping the final publish step."
        type: boolean

jobs:
  stage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-node
        with:
          enable-corepack: false
      - name: Configure git
        run: |
          git config --global user.name 'Turbobot'
          git config --global user.email 'turbobot@vercel.com'
      - name: Version
        run: |
          ./scripts/version.js ${{ inputs.increment }}
          cat version.txt
      - name: Stage Commit
        id: stage
        run: cd cli && make stage-release && echo "STAGE_BRANCH=$(git branch --show-current)" >> $GITHUB_OUTPUT
      - name: Show Stage Commit
        run: echo "$STAGE_BRANCH"
    outputs:
      stage-branch: "${{ steps.stage.outputs.STAGE_BRANCH }}"

  build-go-darwin:
    name: "Build Go for macOS"
    runs-on: macos-latest
    needs: [stage]
    steps:
      - name: Show Stage Commit
        run: echo "${{ needs.stage.outputs.stage-branch }}"
      - uses: actions/checkout@v3
        with:
          ref: ${{ needs.stage.outputs.stage-branch }}
      - run: git fetch origin --tags
      - uses: ./.github/actions/setup-go
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - uses: actions-rs/toolchain@v1
      - run: |
          rustup target add x86_64-apple-darwin
          rustup target add aarch64-apple-darwin
      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser-pro
          version: latest
          install-only: true
        env:
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
      - name: Build Artifacts
        run: cd cli && make build-go-turbo-darwin
        env:
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: turbo-go-darwin-${{ needs.stage.outputs.stage-branch }}
          path: cli/dist-darwin

  build-rust:
    name: "Build Rust"
    needs: [stage]
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-latest
            target: "x86_64-apple-darwin"
            container-options: "--rm"
          - host: macos-latest
            target: "aarch64-apple-darwin"
            container-options: "--rm"
    runs-on: ${{ matrix.settings.host }}
    container:
      image: ${{ matrix.settings.container }}
      options: ${{ matrix.settings.container-options }}
    steps:
      - name: Show Stage Commit
        run: echo "${{ needs.stage.outputs.stage-branch }}"
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          ref: "${{ needs.stage.outputs.stage-branch }}"

      - name: Setup Container
        if: ${{ matrix.settings.container-setup }}
        run: ${{ matrix.settings.container-setup }}

      - name: Setup Protoc
        uses: arduino/setup-protoc@v1.2.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Rust Setup
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          target: ${{ matrix.settings.target }}

      - name: Build Setup
        shell: bash
        if: ${{ matrix.settings.setup }}
        run: ${{ matrix.settings.setup }}

      - name: Build
        run: ${{ matrix.settings.rust-build-env }} cargo build --release -p turbo --target ${{ matrix.settings.target }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: turbo-${{ matrix.settings.target }}
          path: target/${{ matrix.settings.target }}/release/turbo*

  npm-publish:
    name: "Publish To NPM"
    runs-on: ubuntu-latest
    needs: [stage, build-go-darwin, build-rust]
    steps:
      - name: Show Stage Commit
        run: echo "${{ needs.stage.outputs.stage-branch }}"
      - uses: actions/checkout@v3
        with:
          ref: "${{ needs.stage.outputs.stage-branch }}"
      - run: git fetch origin --tags
      - uses: ./.github/actions/setup-node
        with:
          enable-corepack: false
      - uses: ./.github/actions/setup-go
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Configure git
        run: |
          git config --global user.name 'Turbobot'
          git config --global user.email 'turbobot@vercel.com'

      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser-pro
          version: latest
          install-only: true
        env:
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}

      - name: Download Rust artifacts
        uses: actions/download-artifact@v3
        with:
          path: rust-artifacts

      - name: Move Rust artifacts into place
        run: |
          mv rust-artifacts/turbo-aarch64-apple-darwin cli/dist-darwin-arm64
          mv rust-artifacts/turbo-x86_64-apple-darwin cli/dist-darwin-amd64

      # TODO: This is a duplicate download of artifacts, but since the download path is different,
      # we will leave this for a future optimization.
      - name: Download Go artifacts
        uses: actions/download-artifact@v3
        with:
          path: go-artifacts

      - name: Move Go artifacts into place
        run: |
          ls go-artifacts

          mv go-artifacts/turbo-go-darwin-${{ needs.stage.outputs.stage-branch }}/turbo_darwin_amd64_v1/bin/* cli/dist-darwin-amd64
          chmod a+x cli/dist-darwin-amd64/turbo
          chmod a+x cli/dist-darwin-amd64/go-turbo
          mv go-artifacts/turbo-go-darwin-${{ needs.stage.outputs.stage-branch }}/turbo_darwin_arm64/bin/* cli/dist-darwin-arm64
          chmod a+x cli/dist-darwin-arm64/turbo
          chmod a+x cli/dist-darwin-arm64/go-turbo

      # Upload published artifacts in case they are needed for debugging later
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: turbo-combined
          path: cli/dist
